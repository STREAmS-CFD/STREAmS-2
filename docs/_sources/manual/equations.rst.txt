===================================
STREAmS equations and flow cases
===================================

STREAmS has been tailored to carry out DNS of three 
types of canonical compressible flow configurations:

- compressible plane channel flow, 
- compressible boundary layer over a flat plate, 
- shock wave/boundary layer interaction generated by oblique shock impingement.

For all the flow cases, :math:`x` indicates the streamwise coordinate, 
:math:`y` indicates the wall-normal coordinate, and :math:`z` indicates the 
spanwise coordinate.  
The dimensions of the computational domain in the corresponding directions
are :math:`L_x`, :math:`L_y`, and :math:`L_z`.

-------------------------------------
Non-dimensional governing equations
-------------------------------------

STREAmS solves the fully compressible Navierâ€“Stokes equations 
for a calorically or thermally perfect, heat-conducting gas. 
The governing equations in dimensional form, adopting
the Einsten summation notation, are thus:

.. math::

   \frac{\partial \rho^*}{\partial t^*} + \frac{\partial \rho^* u_i^*}{\partial x_i^*}  = 0

.. math::

   \frac{\partial \rho^* u_i^*}{\partial t^*} + \frac{\partial \rho^* u_i^*}{\partial x_j^*} = -\frac{\partial p^*}{\partial x_i^*} + \frac{\partial \sigma_{ij}^*}{\partial x_j^*}

.. math::

   \frac{\partial \rho^* E^*}{\partial t^*} + \frac{\partial \rho^* u_j^* H^*}{\partial x_j^*} = - \frac{\partial q_j^*}{\partial x_j^*} + \frac{\sigma_{ij}^* u_i^*}{\partial x_j^*}

.. math::

   p^* = \rho^* R^* T^*

where we indicate dimensional quantities with the asterisk symbol. 
In particular, :math:`\rho^*` is the density, 
:math:`u_i^*` are the velocity components in the three coordinate directions, 
:math:`p^*` is the pressure, 
:math:`\sigma^*_{ij}` is the viscous stress tensor, 
:math:`E^*` is the total specific energy defined 
as :math:`E^* = e^* + u_i^* u_i^*/2`, 
:math:`H^*` is the total specific enthalpy, defined 
as :math:`H^* = E^* + p^*/\rho^*`, 
and :math:`R^*` is the gas constant.

The set of Navier-Stokes equations is considered in a given domain and is completed
by assigning initial and boundary conditions.

For the general case of a thermally perfect gas, the specific internal energy
and enthalpy are defined respectively as 

.. math::

   e^* = \int_{T_{R,E}^*}^{T^*} C_v^*(T^*)\,\mathrm{d} T^* \quad \mathrm{and} \quad 
   h^* = \int_{T_{R,E}^*}^{T^*} C_p^*(T^*)\,\mathrm{d} T^* \, .

where :math:`T_{R,E}^*` is the reference temperature for energy, and 
:math:`C_p` and :math:`C_v` are respectively the specific heat capacity 
at constant pressure and volume, which are assumed in general as functions 
of the temperature. It is worth noting that :math:`e^*` and :math:`h^*` 
formally depend on :math:`T_{R,E}` but they appear in Navier-Stokes set of equations
only as derivatives and, as a consequence, their values are defined up
to an additive constant. For this reason :math:`T_{R,E}` can be chosen freely
in the previous equations.

The constitutive equations defining the viscous stress tensor and 
the heat flux vector are: 

.. math::

   \sigma_{ij}^* = \mu^* \left( \frac{\partial u_i^*}{\partial x_j^*} 
                              + \frac{\partial u_j^*}{\partial x_i^*}
                  - \frac{2}{3} \frac{\partial u_k^*}{\partial x_k^*} 
                                                          \delta_{ij} \right)

.. math::

   q_j^* = - k^* \frac{\partial T^*}{\partial x^*_j} = - \frac{\mu^* C_p^*}{Pr} \frac{\partial T^*}{\partial x^*_j}

where :math:`\mu^*` is the dynamic viscosity, evaluated as a 
function of the temperature, and :math:`k^*` is the thermal 
conductivity, expressed in terms of the Prandtl number :math:`Pr`
as :math:`k^* = \mu^* C_p^*/Pr`.

For the viscosity-temperature relationship, two options are available:

.. math::

   \mu^* = \mu^*(T_{R,V}^*) \ f^*\left(\frac{T^*}{T^*_{R,V}}\right) = \mu^*(T_{R,V}^*) \cdot 
   \begin{cases}
   \left(\frac{T^*}{T_{R,V}^*}\right)^\alpha & \mathrm{Power\,law}\\
   \left(\frac{T^*}{T_{R,V}^*}\right)^{3/2} \frac{1 + S^*/T_{R,V}^*}{T^*/T_{R,V}^* + S^*/T_{R,V}^*} & \mathrm{Sutherland's\,law}\\
   \end{cases}

where :math:`\alpha` and :math:`S^*` are coefficients that depend on the fluid.

In order to obtain the nondimensional form of the governing equations, 
we define some reference quantities and write each dimensional quantity :math:`q^*` as the product 
between its reference quantity :math:`q_0` and its non-dimensional value :math:`q`, i.e.,

.. math::

   q^* = q_0 \cdot q

We assume a minimal set of four independent reference quantities and, in particular, 
the quantities reported in the following table:

.. list-table:: Independent reference quantities for non-dimensionalization
   :align: center
   :width: 400
   :widths: 100 100 100 100 
   :header-rows: 0

   * - :math:`R_0`   
     - :math:`\rho_0`
     - :math:`T_0`   
     - :math:`L_0`   

The other reference quantities are uniquely derived from the previous quantities as summarized in the following table:

.. list-table:: Derived reference quantities for non-dimensionalization
   :header-rows: 1

   * - :math:`p_0`
     - :math:`U_0`   
     - :math:`T_0`   
     - :math:`c_{p,0}`   
     - :math:`c_{v,0}`   
     - :math:`\mu_0`   
     - :math:`k_0`   
     - :math:`e_0`   
     - :math:`h_0`   

   * - :math:`\rho_0 R_0 T_0`
     - :math:`\sqrt{R_0 T_0}`   
     - :math:`L_0/U_0`   
     - :math:`R_0`   
     - :math:`R_0`   
     - :math:`\rho_0 U_0 L_0`   
     - :math:`\rho_0 U_0 L_0 c_{p,0}`   
     - :math:`R_0 T_0`   
     - :math:`R_0 T_0`   

The choice of a minimal set of independent quantities ensure that non-dimensional form of the equations is
identical to the dimensional one, provided that dimensional quantities are replaced by non-dimensional counterparts.

Using non-dimensional form of equations allows to minimize the parameter space of a given problem by
matching independent reference quantities to physical quantities of a given set of problems.
For instance, in order to consider all the simulations in a box domain of size :math:`L^*_{BOX}`, it is possible
to assume that the reference length matches the box size, i.e., :math:`L_0 = L^*_{BOX}` so that non-dimensional
size of the box is always one, i.e., :math:`L_{BOX} = \frac{L^*_{BOX}}{L_0} = 1`. This way, it is possible
to only simulate non-dimensional unitary box domains while results apply to any dimensional box provided that 
dimensional results are reconstucted by (freely) assuming physical dimensional values for independent reference quantities.

In our case, the non-dimensionalization is based on four independent quantities. To meaningfully reduce the parameter space,
we set them according to our considered flow cases. However, one reference quantity is chosen independently of 
the flow case. In particular we set

.. math::

   R_0 = R^* \rightarrow R = 1

The other three reference quantities are set according to the flow case as summarized in the following table.

.. list-table:: Choice of independent reference quantities depending on the flow case h=channel half-height. 
   Subscripts B=channel-bulk, W=wall, I=boundary-layer-inlet.
   :header-rows: 1
   :align: center

   * - Flow case
     - :math:`\rho_0`
     - :math:`T_0`   
     - :math:`L_0`   
   * - | Channel
     - :math:`\rho^*_B` 
     - :math:`T^*_W`    
     - :math:`h^*`      
   * - Boundary layer
     - :math:`\rho^*_\infty`  
     - :math:`T^*_\infty`     
     - :math:`\delta^*_I` 

Moreover, we also set the reference temperatures of energy :math:`T_{R,E}` and viscosity :math:`T_{R,V}` equal to the reference temperature 
for non-dimensionalization :math:`T_0`.
This can be done since such reference temperatures can be chosen freely. Please note, however, that: 

- the energy at the reference temperature equals to zero and is cleary different from the reference energy used for non-dimensionalization :math:`e_0`

- viscosity at the reference temperature does not correspond to the reference viscosity :math:`\mu_0`, i.e., there is in general a non-unity value of non-dimensional viscosity :math:`\mu(T_{R,V})=\mu^*(T_{R,V})/\mu_0` at reference temperature.

A detailed discussion of each flow case follows.

---------------------------------------------------
Flow case [1] - Compressible plane channel flow
---------------------------------------------------

.. image:: ./figures/Channel_case.png
   :width: 600

For the simulation of the compressible plane channel flow, 
the size of computational domain is given by :math:`[Lx,2h,Lz]`. In particular :math:`h` indicates the half-height of the channel. 

*Bulk quantites* are indicated with :math:`B` subscript and are defined as: 

- bulk density

.. math::

   \rho^*_B = \frac{1}{V^*} \int_{V^*} \rho^*\, \mathrm{d}V^*

- bulk velocity

.. math::

   U^*_B = \frac{1}{\rho^*_B\,V^*} \int_{V^*} \rho^*\,u^*\, \mathrm{d}V^*

- bulk temperature

.. math::

   T^*_B = \frac{1}{\rho^*_B\,U^*_B\,V^*} \int_{V^*} \rho^*\,u^*\,T^*\, \mathrm{d}V^*

where :math:`V` is the volume of the computational domain, 
:math:`\rho` is the density, 
:math:`u` is the streamwise velocity, 
and :math:`T` is the temperature.  

We always consider:

-- constant wall temperature 

-- constant bulk density (a forcing term is added to this purpose)

-- constant bulk velocity (a forcing term is added to this purpose)

As concerns bulk temperature, we consider two different types of channel flow. 

-- [1-a] Fixed bulk temperature: a forcing term is added also to th energy equation to ensure bulk temperature is constant.

-- [1-b] Free bulk temperature: temperature is free to evolve and convergence is reached when fixed wall temperature
prevent additional (aerodynamic) heating in the bulk.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Flow case [1-a] - Fixed bulk temperature channel
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Case [1-a] is perfectly defined by the following quantities:

.. list-table:: Quantities defining [1-a] case.
   :header-rows: 0
   :align: center

   * - :math:`\rho^*_B`
     - :math:`T^*_B`
     - :math:`U^*_B`
     - :math:`\mu^*_w`   
     - :math:`k^*_w`   
     - :math:`T^*_w`   
     - :math:`L^*_x`   
     - :math:`h^*`   
     - :math:`L^*_z`   
   * - :math:`\rho_0`
     - 
     - 
     - 
     -
     - :math:`T_0`   
     -
     - :math:`L_0`   
     -

Independent reference quantities for non-dimensionalizations are highlighted in the second line.
This means that corresponding non-dimensional quantities are taken as unitary.

It would be possible to assign the remaining six quantities as inputs of the simulation. However,
this is done only for :math:`L_x` and :math:`L_z`. The other four quantities are estimated from
more physically meaningful non-dimensional groups which can be assigned from input. In particular:

- estimated friction Reynolds number 
.. math::

   Re_\tau = \frac{u_\tau\,h}{\nu_w}

- bulk Mach number based on the bulk temperature
.. math::

   M_B = \frac{U_B}{\sqrt{\gamma_B\,R\,T_B}}

- non-dimensional wall temperature delta 
.. math::

   \theta = \frac{T_W-T_B}{T_{B,R}-T_B}

- Prandtl number
.. math::

   Pr = \frac{\mu C_p}{k}

where :math:`u_\tau` is the friction velocity, 
:math:`\nu_w` is the kinematic viscosity at the wall 
and :math:`T_{B,R}` is the recovery wall temperature based on :math:`T_B`.
Please note that the non-dimensional groups have been written without asterisks
because the definitions stand considering both non-dimensional and dimensional variables.

.. note:: Channel with fixed bulk temperature: derivation of flow quantities from input

   Inputs:

   - References quantities (unitary non dimensional values): :math:`\rho_B`, :math:`T_w`, :math:`h`

   - Non-dimensional groups: :math:`Re_\tau`, :math:`M_B`, :math:`\theta`, :math:`Pr`

   Outputs:

   - Non-dimensional flow parameters  :math:`T_B`, :math:`U_B`, :math:`\mu_w`, :math:`k_w`   


   Derivation:

   .. math::

      \begin{align}
      &\frac{T_R}{T_B} = 1 + \frac{\gamma-1}{2} r M_B^2 \\
      &\frac{T_W}{T_B} = 1 + \theta \left( \frac{T_R}{T_B} - 1 \right) \\
      &\widetilde{M_B} = M_B \sqrt{\frac{T_B}{T_W}} \\
      &\frac{T_W}{T_R} = \frac{T_W}{T_B} \cdot \frac{T_B}{T_R}   \\
      &\widetilde{Re_B} = \frac{\rho_B\,U_B\,h}{\mu(T_w)} = cha_{estimator}\left(Re_\tau, M_B, \frac{T_w}{T_R}\right) \\
      &T_B = \frac{T_B}{T_W} T_W \\
      &u_B = \widetilde{M_B} \sqrt{\gamma_w R T_W} \\
      &\mu_w = \frac{\rho_B u_B h}{\widetilde{Re_B}} \\
      &k_w = \frac{\mu_w c_{p,w}}{Pr}
      \end{align}


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Flow case [1-b] - Free bulk-temperature channel
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Case [1-b] is perfectly defined by the following quantities:

.. list-table:: Quantities defining [1-b] case.
   :header-rows: 0
   :align: center

   * - :math:`\rho^*_B`
     - :math:`U^*_B`
     - :math:`\mu^*_w`   
     - :math:`k^*_w`   
     - :math:`T^*_w`   
     - :math:`L^*_x`   
     - :math:`h^*`   
     - :math:`L^*_z`   
   * - :math:`\rho_0`
     - 
     - 
     -
     - :math:`T_0`   
     -
     - :math:`L_0`   
     -

Independent reference quantities for non-dimensionalizations are highlighted in the second line.
This means that corresponding non-dimensional quantities are taken as unitary.

It would be possible to assign the remaining five quantities as inputs of the simulation. However,
this is done only for :math:`L_x` and :math:`L_z`. The other three quantities are estimated from
more physically meaningful non-dimensional groups which can be assigned from input. In particular:

- estimated friction Reynolds number 
.. math::

   Re_\tau = \frac{u_\tau\,h}{\nu_w}

- bulk Mach number based on the wall temperature
.. math::

   \widetilde{M_B} = \frac{U_B}{\sqrt{\gamma_w\,R\,T_w}}

- Prandtl number
.. math::

   Pr = \frac{\mu C_p}{k}

where :math:`u_\tau` is the friction velocity, 
:math:`\nu_w` is the kinematic viscosity at the wall 
and :math:`T_{B,R}` is the recovery wall temperature based on :math:`T_B`.
Please note that the non-dimensional groups have been written without asterisks
because the definitions stand considerind both non-dimensional of dimensional variables.

.. note:: Channel with free bulk temperature: derivation of flow quantities from input


   Inputs:

   - References quantities (unitary non dimensional values): :math:`\rho_B`, :math:`T_w`, :math:`h`

   - Non-dimensional groups: :math:`Re_\tau`, :math:`\widetilde{M_B}`, :math:`Pr`

   Outputs:

   - Non-dimensional flow parameters  :math:`U_B`, :math:`\mu_w`, :math:`k_w`   

   Derivation:

   .. math::

      \begin{align}
      &\theta = -1\\
      &M_B = \sqrt{\frac{\widetilde{M_B}^2}{1-\frac{\gamma-1}{2} r \theta \widetilde{M_B}^2}} \\
      &\frac{T_R}{T_B} = 1 + \frac{\gamma-1}{2} r M_B^2 \\
      &\frac{T_W}{T_B} = 1 + \theta \left( \frac{T_R}{T_B} - 1 \right) \\
      &\frac{T_W}{T_R} = \frac{T_W}{T_B} \cdot \frac{T_B}{T_R}   \\
      &\widetilde{Re_B} = \frac{\rho_B\,U_B\,h}{\mu(T_w)} = cha_{estimator}\left(Re_\tau, M_B, \frac{T_w}{T_R}\right) \\
      &T_B = \frac{T_B}{T_W} T_W \\
      &u_B = \widetilde{M_B} \sqrt{\gamma_w R T_W} \\
      &\mu_w = \frac{\rho_B u_B h}{\widetilde{Re_B}} \\
      &k_w = \frac{\mu_w c_{p,w}}{Pr}
      \end{align}

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Flow-case [2-a] Boundary layer
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.. image:: ./figures/BLay_case.png
   :width: 600

[BL] is perfectly defined by the following quantities:

.. list-table:: Quantities defining boundary layer case.
   :header-rows: 0
   :align: center

   * - :math:`\rho^*_\infty`
     - :math:`T^*_\infty`
     - :math:`U^*_\infty`
     - :math:`\mu^*_\infty`   
     - :math:`k^*_\infty`   
     - :math:`T^*_w`   
     - :math:`L^*_x`   
     - :math:`L^*_y`   
     - :math:`\delta_I`   
     - :math:`L^*_z`   
   * - :math:`\rho_0`
     - :math:`T_0`    
     - 
     - 
     -
     -
     -
     -
     - :math:`L_0`   
     -

Independent reference quantities for non-dimensionalizations are highlighted in the second line.
This means that corresponding non-dimensional quantities are taken as unitary.

It would be possible to assign the remaining six quantities as inputs of the simulation. However,
this is done only for :math:`L_x`, :math:`L_y`, and :math:`L_z`. The other four quantities are estimated from
more physically meaningful non-dimensional groups which can be assigned from input. In particular:

- estimated friction Reynolds number 
.. math::

   Re_\tau = \frac{u_\tau\,\delta_0}{\nu_w}

- free-stream Mach number
.. math::

   M_\infty = \frac{U_\infty}{\sqrt{\gamma_\infty\,R\,T_\infty}}

- non-dimensional wall temperature delta 
.. math::

   \theta = \frac{T_W-T_\infty}{T_{\infty,R}-T_\infty}

- Prandtl number
.. math::

   Pr = \frac{\mu C_p}{k}

where :math:`u_\tau` is the friction velocity, 
:math:`\nu_w` is the kinematic viscosity at the wall 
and :math:`T_{B,R}` is the recovery wall temperature based on :math:`T_B`.
Please note that the non-dimensional groups have been written without asterisks
because the definitions stand considerind both non-dimensional of dimensional variables.

.. note:: Boundary layer: derivation of flow quantities from input

   Inputs:

   - References quantities (unitary non dimensional values): :math:`\rho_\infty`, :math:`T_\infty`, :math:`\delta_I`

   - Non-dimensional groups: :math:`Re_\tau`, :math:`M_\infty`, :math:`\theta`, :math:`Pr`

   Outputs:

   - Non-dimensional flow parameters :math:`U_\infty`, :math:`\mu_\infty`, :math:`k_\infty`, :math:`T_w`

   Derivation:

   .. math::

      \begin{align}
      &T_R = T_\infty (1+\frac{\gamma-1}{2} r M_\infty^2) \\
      &T_w = \theta (T_R-T_\infty) + T_\infty \\
      &\widetilde{Re_\infty} = \frac{\rho_\infty\,U_\infty\,\delta_I}{\mu_\infty} = bl_{estimator}\left(Re_\tau, M_\infty, \frac{T_w}{T_R}\right) \\
      &u_\infty = \widetilde{M_\infty} \sqrt{\gamma_\infty R T_\infty} \\
      &\mu_\infty = \frac{\rho_\infty u_\infty h}{\widetilde{Re_\infty}} \\
      &k_\infty = \frac{\mu_\infty c_{p,\infty}}{Pr}
      \end{align}


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Flow case [2-b] - Shock-boundary layer interaction
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.. image:: ./figures/SBLI_case.png
   :width: 600

Simulations of the shock wave/boundary layer interaction
assume that an oblique shock wave from the top surface of the domain 
impinges on a boundary layer developing on the flat bottom surface. 

Discussions of parameters is similar to the boundary layer case except
that two more quantities are needed to define the case and, as a consequence, 
to be defined from input:

- the *shock impingment location* :math:`x_{imp}^s`, which is the longitudinal coordinate where the impinging shock would intersect the bottom surface.

- The *shock wave angle* :math:`\phi^s`, which is the acute angle between the shock and the top (or bottom) surface.

